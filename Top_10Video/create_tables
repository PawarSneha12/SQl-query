//
-- create TABLE EMPLOYEE
CREATE TABLE EMPLOYEE (
  empId int NOT NULL,
  name varchar(20),
  gender char(1),
  salary integer,
  city char(20));

-- -- insert
INSERT INTO EMPLOYEE VALUES (1, 'Anjun','M',75000, 'Pune'),
(2,'Ekdanya','M',125000,'Banglore'),
(3,'Lalita','F',150000,'Mathura'),
(4,'Madhav','M',250000,'Delhi'),
(5,'Visakha','F',120000,'Mathura');



-- -- fetch 
SELECT * FROM EMPLOYEE ;

create table employeeD(
empId int not null,
project varchar(20),
e_position varchar(20),
doj date);

insert into employeeD values(1,'P1','Executive','2019-01-26'),
(2,'P2','Executive','2020-05-04'),
(3,'P1','Lead','2021-10-21'),
(4,'P3','Manager','2019-11-29'),
(5,'P2','Manager','2020-08-01');
select * from employeeD;



-- q1. find list employee whode salary in between 2l and 3l
select name from employee
where salary between 200000 and 300000;

------------------------------------------------------------------------------------------------------------------------------------------------------------
-- q1(b)  list employee whose city is same 

select e1.* from employee e1, employee e2
where e1.city =e2.city and e1.empId <> e2.empId;

----------------------------------------------------
-- q1(c). find null value in employee table
select * from employee
where empId is null;

------------------------------------------------------------------------------------------------------------------------------------------------------------
-- q.2 (a) find cumulative sum of employee's salary
select empId,name ,salary, sum(salary) over (order by empId) as cumulativeSum from employee;

------------------------------------------------------------------------------------------------------------------------------------------------------------
-- q2(b) ratio of male and female in company
select 
(count( case when gender='M' then 1 end) *100.0/count(*) ) as male_Ratio,
(count(case when gender='F' then 1 end)*100.0/count(*)) as female_Ratio
from employee;

------------------------------------------------------------------------------------------------------------------------------------------------------------

-- q2(c) fetch 50% records from employee
select * from employee
where empId<=(select count(empId)/2 from employee);
------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Q3. employee salary but replace the last 2 digits with 'XX'

select empId,name,concat(left(cast(salary as char),length(cast(salary as char))-2),'XX') as marked_number
from employee;


select empId,name,concat(left(salary,length(salary)-2),'XX') as new_salary
from employee;

------------------------------------------------------------------------------------------------------------------------------------------------------------
-- Q4. fetch even and odd rows from employee table
select *
from employee
where MOD(empId,2)=0;

SELECT * 
FROM employee
where MOD(empId,2)=1;
select *
FROM employee
where empId%2=0;
------------------------------------------------------------------------------------------------------------------------------------------------------------

